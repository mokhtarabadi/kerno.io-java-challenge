<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">
	<!-- It is said that the spring boot usage log needs to be introduced, but after I introduce it, two logs are always printed, so I removed it, and it does not affect the use -->
	<!-- <include resource="org/springframework/boot/logging/logback/base.xml"/> -->

	<!-- log output format -->
	<property name="CONSOLE_LOG_PATTERN" value="%red(%d{yyyy-MM-dd HH:mm:ss})  %highlight(%-5level) %red([%thread])  %boldMagenta(%logger{50})  %cyan(%msg%n)"/>
	<property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss}  %-5level [%thread]  %logger{50}  %msg%n"/>

	<!-- console settings -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${CONSOLE_LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- INFO -->
	<appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!--File path, note that LOG_PATH is the default value, 
			Its configuration corresponds to the logging.path value in application.properties-->
		<!--<file>${LOG_PATH}/info/info.log</file>-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--file name-->
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/info.log</fileNamePattern>
			<!--<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/info.%i.log</fileNamePattern>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<maxFileSize>10MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>-->
			<!--The maximum number of saved history files-->
			<MaxHistory>10</MaxHistory>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>INFO</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!--asynchronous output-->
	<appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<appender-ref ref="infoAppender"/>
	</appender>

	<!-- DEBUG -->
	<appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- File path , note that LOG_PATH is the default,
			Its configuration corresponds to the logging.path value in application.properties-->
		<!--<file>${LOG_PATH}/debug/debug.log</file>-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- file name -->
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/debug.log</fileNamePattern>
			<!-- The maximum number of files to save history -->
			<MaxHistory>10</MaxHistory>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>DEBUG</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- asynchronous output -->
	<appender name="ASYNC-DEBUG" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<appender-ref ref="debugAppender"/>
	</appender>

	<!-- WARN -->
	<appender name="warnAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- File path , note that LOG_PATH is the default,
			Its configuration corresponds to the logging.path value in application.properties-->
		<!--<file>${LOG_PATH}/warn/warn.log</file>-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- file name -->
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/warn.log</fileNamePattern>
			<!-- The maximum number of files to save history -->
			<MaxHistory>10</MaxHistory>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- ASYNCHRONOUS OUTPUT -->
	<appender name="ASYNC-WARN" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<appender-ref ref="warnAppender"/>
	</appender>

	<!-- ERROR -->
	<appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<!-- File path , note that LOG_PATH is the default,
			Its configuration corresponds to the logging.path value in application.properties-->
		<!--<file>${LOG_PATH}/error/error.log</file>-->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!-- file name -->
			<fileNamePattern>${LOG_PATH}/%d{yyyy-MM-dd}/error.log</fileNamePattern>
			<!-- The maximum number of files to save history -->
			<MaxHistory>10</MaxHistory>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
		</rollingPolicy>
		<encoder>
			<pattern>${FILE_LOG_PATTERN}</pattern>
			<charset>UTF-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

	<!-- asynchronous output -->
	<appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
		<discardingThreshold>0</discardingThreshold>
		<queueSize>256</queueSize>
		<appender-ref ref="errorAppender"/>
	</appender>

	<logger name="org.springframework" additivity="false">
		<level value="ERROR"/>
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="errorAppender"/>
	</logger>

	<!-- Since there are a lot of debug level logs printed under the following two packages during startup, it is transferred to ERROR-->
	<logger name="org.apache.tomcat.util" additivity="false">
		<level value="ERROR"/>
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="errorAppender"/>
	</logger>

	<!-- By default, spring boot imports a lot of hibernate dependent packages. When starting, there will be hibernate-related content, which can be removed directly. -->
	<logger name="org.hibernate.validator" additivity="false">
		<level value="ERROR"/>
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="errorAppender"/>
	</logger>

	<logger name="com.mokhtarabadi.wsserver" level="info"/>

	<root level="INFO">
		<appender-ref ref="STDOUT"/>
		<appender-ref ref="infoAppender"/>
		<appender-ref ref="debugAppender"/>
		<appender-ref ref="warnAppender"/>
		<appender-ref ref="errorAppender"/>
	</root>
</configuration>