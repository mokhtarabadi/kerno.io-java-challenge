x-mongo-config: &env_mongo
  MONGODB_HOST: mongodb
  MONGODB_PORT: 27018
  MONGODB_USERNAME: admin
  MONGODB_PASSWORD: 123456
  MONGODB_DATABASE: chat-db
  MONGODB_ROOT_PASSWORD: 123456

x-env-redis: &env_redis
  REDIS_PASSWORD: 123456
  REDIS_HOST: redis
  REDIS_PORT: 16379
  REDIS_ARGS: "--save 20 1 --loglevel warning --requirepass 123456"

x-env-zookeeper: &env_zookeeper
  ZOOKEEPER_CLIENT_PORT: 2181
  ZOOKEEPER_TICK_TIME: 2000

x-env-kafka: &env_kafka
  KAFKA_BROKER_ADDRESS: kafka:19092
  KAFKA_GROUP_ID: group1
  KAFKA_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  KAFKA_BROKER_ID: 1
  KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:19092
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

x-env-registry: &env_registry
  SCHEMA_REGISTRY_HOST_NAME: schema-registry
  SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
  SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
  SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://localhost:19092
  SCHEMA_REGISTRY_DEBUG: "true"

services:
  messages-worker:
    image: gradle:jdk18
    hostname: messages-worker
    restart: always
    working_dir: /usr/src/app
    volumes: [ ./apps/messages-worker:/usr/src/app ]
    command: gradle bootRun
    mem_limit: 4096MB
    environment:
       <<: [ *env_redis, *env_mongo, *env_kafka ]
  
  ws-server:
    image: gradle:jdk18
    hostname: ws-server
    restart: always
    ports:
        - "8080:8080"
    working_dir: /usr/src/app
    volumes: [ ./apps/ws-server:/usr/src/app ]
    command: gradle bootRun
    mem_limit: 4096MB
    environment:
       <<: [ *env_redis, *env_kafka ]

  mongodb:
    image: bitnami/mongodb:4.2
    hostname: mongodb
    ports: ["27018:27017"]
    environment:
      <<: *env_mongo

  redis:
    image: redis/redis-stack:6.2.6-v6
    hostname: redis
    restart: always
    ports: ["16379:6379"]
    environment:
      <<: *env_redis

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    restart: always
    ports: ["2181:2181"]
    environment:
      <<: *env_zookeeper

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1
    hostname: schema-registry
    restart: always
    depends_on:
      - kafka
    ports: ["8081:8081"]
    environment:
      <<: *env_registry

  kafka:
    image: confluentinc/cp-kafka:7.2.1
    hostname: kafka
    restart: always
    ports: ["19092:19092"]
    depends_on:
      - zookeeper
    environment:
      <<: *env_kafka

  kafka-init:
    image: bitnami/kafka:3.5.1
    working_dir: /scripts
    command: ["/bin/bash", "-c", "./kafka-init.sh"]
    environment:
      <<: *env_kafka
    depends_on:
      - kafka
    volumes:
      - ./scripts:/scripts
    init: true
