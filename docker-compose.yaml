x-mongo-config: &env_mongo
  MONGODB_URI: mongodb://mongodb:27017/chat-db?authSource=admin
  MONGODB_USERNAME: root
  MONGODB_PASSWORD: "123456"

  MONGODB_REPLICASET: rs0
  MONGODB_REPLICA_SET_NAME: rs0
  MONGODB_REPLICA_SET_MODE: primary
  MONGODB_REPLICA_SET_KEY: replsetkey
  MONGODB_ROOT_PASSWORD: "123456"
  MONGODB_ADVERTISED_HOSTNAME: mongodb
  MONGODB_MIN_POOL_SIZE: 1
  MONGODB_MAX_POOL_SIZE: 5

x-env-redis: &env_redis
  REDIS_PASSWORD: 123456
  REDIS_HOST: redis
  REDIS_PORT: 6379

  REDIS_ARGS: "--save 20 1 --loglevel warning --requirepass 123456"

x-env-zookeeper: &env_zookeeper
  ALLOW_ANONYMOUS_LOGIN: "yes"
  ZOO_AUTOPURGE_INTERVAL: 1

x-env-kafka: &env_kafka
  KAFKA_BROKER_ID: 1
  KAFKA_BROKER_ADDRESS: kafka:9093

  KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
  KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
  KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
  KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
  KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
  ALLOW_PLAINTEXT_LISTENER: "yes"
  KAFKA_ZOOKEEPER_TLS_VERIFY_HOSTNAME: "false"
  KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"

services:
#  messages-worker:
#    image: gradle:jdk18
#    hostname: messages-worker
#    working_dir: /usr/src/app
#    volumes: [./apps/messages-worker:/usr/src/app]
#    command: gradle bootRun
#    mem_limit: 4096MB
#    environment:
#      <<: [*env_redis, *env_mongo, *env_kafka]
#
#  ws-server:
#    image: gradle:jdk18
#    hostname: ws-server
#    working_dir: /usr/src/app
#    volumes: [./apps/ws-server:/usr/src/app]
#    command: gradle bootRun
#    mem_limit: 4096MB
#    environment:
#      <<: [*env_redis, *env_mongo, *env_kafka]

  mongodb:
    image: bitnami/mongodb:4.2
    hostname: mongodb
    ports: ["27018:27017"]
    environment:
      <<: *env_mongo

#  redis:
#    image: redis/redis-stack:6.2.6-v6
#    hostname: redis
#    restart: always
#    ports: ["6379:6379"]
#    environment:
#      <<: *env_redis

  zookeeper:
    image: bitnami/zookeeper:3.7
    hostname: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      <<: *env_zookeeper

  kafka:
    image: bitnami/kafka:3.5.1
    hostname: kafka
    restart: always
    ports: ["9093:9093"]
    environment:
      <<: *env_kafka
    depends_on:
      zookeeper:
        condition: service_started

  kafka-init:
    image: docker.io/bitnami/kafka:3.5.1
    command: [ "/bin/bash", "-c", "/create_topic.sh" ]
    environment:
      <<: *env_kafka
    depends_on:
      kafka:
        condition: service_started
    volumes:
      - type: bind
        source: ./create_topics.sh
        target: /create_topics.sh
    init: true